QGridLayout

each column has a minimum width and a stretch factor

minimumwidth:
    greatest of setColumnMinimumWidth() and the 
    minimum width of each widget in that column

setColumnMinimumWidth(col,size)
setRowMinimumHeight(row,size)
setColumnStretch(col,stretch)
setRowStretch(row,stretch)

rowCount
columnCount

margin widths:
    contents margin: 9 for widgets
    setSpacing(int) same as margin width
    setVerticalSpacing(int) same as margin width
    setHorizontalSpacing(int) same as margin width

addWidget(w,row,col)

Gauge: heightForWidth(int w)
    2/3 w

Gauge: hasHeightForWidth() return true

Qt::Orientations expandindDirections()
    return Qt::Vertical | Qt::Horizontal

Policy.Fixed
    QWidget.sizeHint() is the only acceptable size
Policy.Minimum
    sizeHint() is a minimum and sufficient
    can be expanded but there is no advantage
Policy.Maximum
    sizeHint() is a maximum
    can be shrunk if other widgets need space
Policy.Preferred
    sizeHint() is best, but can be shrunk.
    Can be expanded but there is no advantage to
    it being larger than sizeHint
Policy.Expanding
    sizeHint() is sensible, but can be shrunk and still be useful
    widget can make use of extra space so it should get as
    much space as possible
Policy.MinimumExpanding
    sizeHint() is a minimum and sufficient
    widget can make use of extra space so it should get as
    much space as possible
    

initial layout:
    fixed size to GaugePage
    fixed size to Gauges
    number of columns based on width page / width gauge
    vertical scroll bars will appear if nec

resize page, fixed size
    number of columns based on new width of page / width gauge
resize page, varying size
    number of columns based on 2/3 h/w ratio
        maximum cols: 10?
            if persize < minWidth * minHeight,
            ncols = width() / minWidth
        no minimum cols
    redo layout
    if set_global:
        set global gauge size, # columns



menu item to adjust layout
    num of columns based on 2/3 h/w ratio,
    redo layout.
menu item to set global gauge size from current page
    set_global = true
    
when current tab changes
    if policy is expanding:
        set policy to fixed
    if set_global:
        set global gauge size, # columns
focus enters tab:
    if global size of gauges is set and size of gauges on current page
        is different than global, set their sizes
    if #columns differs,
        redo layout

initial situation:
    all pages are expanding
        number of columns is dynamically computed for each page
    menu option: 
        freeze/unfreeze layout of this window
            freeze: save gw,gh, ncol, gauge policy=fixed
            unfreeze: gauge policy=expanding, compute ncol, layout
    global
        freeze layout of all windows to this window
            freeze: save gw,gh, ncol, gauge policy=fixed on all pages/gauges
        unfreeze layout of all windows

resize events:
    if current page policy is expanding, compute # columns based on 2/3
    redo layout

    

generally all gauge pages have same size policy
    fixed
    Preferred


