
== Deploying Cockpit with Webstart ==

The development tree for cockpit is setup to facilitate deploying and
running cockpit with webstart.  There is a JNLP file in the top directory,
and the paths it specifies are all relative to top of the source tree,
except for the URL to the code base:

 http://www.eol.ucar.edu/software/webstart/cockpit

To update the webstart deployment of cockpit, checkout the
source tree somewhere, and run makezip -i:

    cd /mystuff
    svn co http://svn.eol.ucar.edu/svn/nidas/trunk/java cockpit
    cd cockpit/deploy/cockpit
    ./makezip -i

The `makezip` script rebuilds the cockpit.jar file and signs it with
`jarsigner`.  You must know the password for the keystore--which is the
same as for the key with alias "cockpit" --to sign the jar file.  All the
other jar files, those under the `lib` directory, should have already
been signed.  If any of them are replaced, they need to be resigned with
the 'cockpit' alias also.

The jar files must be signed for Java Webstart to allow the security
permissions requested in the JNLP file.  The jar files are not certified by
any certificate authority, and the keystore credentials are kept in the
subversion repository for convenience, so there is not really any added
security for a webstart deployment.  The keystore is managed with the JDK
tool `keytool`.

If a web browser has been configured to recognize and handle JNLP files,
then it can browse directly to the JNLP file to launch Cockpit:

 http://www.eol.ucar.edu/software/webstart/cockpit/cockpit.jnlp

Otherwise, java web start can be started on the command line with `javaws`:

 javaws http://www.eol.ucar.edu/software/webstart/cockpit/cockpit.jnlp

Using the javaws command as above is a good way to debug problems.

== Deploying Cockpit as a Zip File ==

The cockpit.zip file generated by the `makezip` script assembles everything
needed to run cockpit.  The jar file will include the Main-Class parameter
in the manifest so the jar file can be executed by java, using `java -jar
cockpit.jar`.  The jar file also specifies a Class-Path which lists the
relative paths to all of the required jar files under the `lib` directory.

To install and run cockpit on a system using the zip file:

 mkdir cockpit
 cd cockpit
 unzip <path-to-cockpit.zip>
 java -jar cockpit.jar

== Jar and Webstart Resources ==

 http://java.sun.com/javase/technologies/desktop/javawebstart/
 http://java.sun.com/docs/books/tutorial/deployment/TOC.html
 http://java.sun.com/javase/6/docs/technotes/guides/javaws/index.html
 http://java.sun.com/javase/6/docs/technotes/guides/javaws/developersguide/syntax.html
